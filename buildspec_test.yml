version: 0.2

env:
  variables:
    AWS_ACCOUNT_ID: "010438506754"
    AWS_REGION: "us-east-1"
    ECR_REPOSITORY: "fullstack/python"  
    EKS_CLUSTER_NAME: "my-cluster1"

phases:
  install:
    commands:
      - echo Installing pip
      - curl -O https://bootstrap.pypa.io/get-pip.py
      - python3 get-pip.py
      - echo Installing AWS CLI using pip
      - pip install awscli
      - echo AWS CLI installed successfully
      - echo Installing kubectl
      - curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
      - chmod +x ./kubectl
      - mv ./kubectl /usr/local/bin/kubectl
      - echo kubectl installed successfully
      - curl -Lo aws-iam-authenticator https://github.com/kubernetes-sigs/aws-iam-authenticator/releases/download/v0.5.9/aws-iam-authenticator_0.5.9_linux_amd64
      - chmod +x ./aws-iam-authenticator
      - echo installed IAM aws-iam-authenticator
      - export PATH=$PWD/:$PATH


  pre_build:
    commands:
      - $(aws ecr get-login --no-include-email --region $AWS_REGION)
      - echo "Docker login output:"
      - export KUBECONFIG=$HOME/.kube/config
  build:
    commands:
      - VERSION=$(cat version) || { echo "Version file not found"; exit 1; }  # Handle case if version file is missing
      - echo Building the Docker image
      - docker build -t my-app .
      - echo Tagging the Docker image with version $VERSION
      - docker tag my-app:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/fullstack/python:$VERSION
      - echo Pushing the Docker image
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/fullstack/python:$VERSION

  post_build:
    commands: 
      - aws eks update-kubeconfig --name my-cluster1
      - template=$(cat "deployment.yml" | sed "s/latest/$VERSION/g")
      - echo "$template" | kubectl apply -f - || echo "Failed to apply template"

artifacts:
  files:
    - '**/*'
